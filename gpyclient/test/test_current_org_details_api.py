# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: hello@grafana.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import gpyclient
from gpyclient.api.current_org_details_api import CurrentOrgDetailsApi  # noqa: E501
from gpyclient.rest import ApiException


class TestCurrentOrgDetailsApi(unittest.TestCase):
    """CurrentOrgDetailsApi unit test stubs"""

    def setUp(self):
        self.api = gpyclient.api.current_org_details_api.CurrentOrgDetailsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_org_user(self):
        """Test case for add_org_user

        Add a new user to the current organization  # noqa: E501
        """
        pass

    def test_delete_org_user(self):
        """Test case for delete_org_user

        Delete user in current organization  # noqa: E501
        """
        pass

    def test_get_org(self):
        """Test case for get_org

        """
        pass

    def test_get_org_users(self):
        """Test case for get_org_users

        Get all users within the current organization.  # noqa: E501
        """
        pass

    def test_lookup_org_users(self):
        """Test case for lookup_org_users

        Get all users within the current organization (lookup)  # noqa: E501
        """
        pass

    def test_update_org(self):
        """Test case for update_org

        Update current Organization.  # noqa: E501
        """
        pass

    def test_update_org_address(self):
        """Test case for update_org_address

        Update current Organization's address.  # noqa: E501
        """
        pass

    def test_update_org_user(self):
        """Test case for update_org_user

        Updates the given user  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
