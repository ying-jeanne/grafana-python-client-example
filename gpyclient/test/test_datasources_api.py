# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: hello@grafana.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import gpyclient
from gpyclient.api.datasources_api import DatasourcesApi  # noqa: E501
from gpyclient.rest import ApiException


class TestDatasourcesApi(unittest.TestCase):
    """DatasourcesApi unit test stubs"""

    def setUp(self):
        self.api = gpyclient.api.datasources_api.DatasourcesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_datasource(self):
        """Test case for add_datasource

        Create a data source.  # noqa: E501
        """
        pass

    def test_check_datasource_health(self):
        """Test case for check_datasource_health

        Check data source health by Id.  # noqa: E501
        """
        pass

    def test_check_datasource_health_by_id(self):
        """Test case for check_datasource_health_by_id

        Check data source health by Id.  # noqa: E501
        """
        pass

    def test_datasource_proxy_delet_ecalls(self):
        """Test case for datasource_proxy_delet_ecalls

        Data source proxy DELETE calls.  # noqa: E501
        """
        pass

    def test_datasource_proxy_delete_by_ui_dcalls(self):
        """Test case for datasource_proxy_delete_by_ui_dcalls

        Data source proxy DELETE calls.  # noqa: E501
        """
        pass

    def test_datasource_proxy_ge_tcalls(self):
        """Test case for datasource_proxy_ge_tcalls

        Data source proxy GET calls.  # noqa: E501
        """
        pass

    def test_datasource_proxy_get_by_ui_dcalls(self):
        """Test case for datasource_proxy_get_by_ui_dcalls

        Data source proxy GET calls.  # noqa: E501
        """
        pass

    def test_datasource_proxy_pos_tcalls(self):
        """Test case for datasource_proxy_pos_tcalls

        Data source proxy POST calls.  # noqa: E501
        """
        pass

    def test_datasource_proxy_post_by_ui_dcalls(self):
        """Test case for datasource_proxy_post_by_ui_dcalls

        Data source proxy POST calls.  # noqa: E501
        """
        pass

    def test_delete_datasource_by_id(self):
        """Test case for delete_datasource_by_id

        Delete an existing data source by id.  # noqa: E501
        """
        pass

    def test_delete_datasource_by_name(self):
        """Test case for delete_datasource_by_name

        Delete an existing data source by name.  # noqa: E501
        """
        pass

    def test_delete_datasource_by_uid(self):
        """Test case for delete_datasource_by_uid

        Delete an existing data source by UID.  # noqa: E501
        """
        pass

    def test_fetch_datasource_resources(self):
        """Test case for fetch_datasource_resources

        Fetch data source resources.  # noqa: E501
        """
        pass

    def test_fetch_datasource_resources_by_id(self):
        """Test case for fetch_datasource_resources_by_id

        Fetch data source resources by Id.  # noqa: E501
        """
        pass

    def test_get_datasource_by_id(self):
        """Test case for get_datasource_by_id

        Get a single data source by Id.  # noqa: E501
        """
        pass

    def test_get_datasource_by_name(self):
        """Test case for get_datasource_by_name

        Get a single data source by Name.  # noqa: E501
        """
        pass

    def test_get_datasource_by_uid(self):
        """Test case for get_datasource_by_uid

        Get a single data source by UID.  # noqa: E501
        """
        pass

    def test_get_datasource_id_by_name(self):
        """Test case for get_datasource_id_by_name

        Get data source Id by Name.  # noqa: E501
        """
        pass

    def test_get_datasources(self):
        """Test case for get_datasources

        Get all data sources.  # noqa: E501
        """
        pass

    def test_update_datasource_by_id(self):
        """Test case for update_datasource_by_id

        Update an existing data source by its sequential ID.  # noqa: E501
        """
        pass

    def test_update_datasource_by_uid(self):
        """Test case for update_datasource_by_uid

        Update an existing data source.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
