# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: hello@grafana.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import pythonclient
from pythonclient.api.admin_ldap_api import AdminLdapApi  # noqa: E501
from pythonclient.rest import ApiException


class TestAdminLdapApi(unittest.TestCase):
    """AdminLdapApi unit test stubs"""

    def setUp(self):
        self.api = pythonclient.api.admin_ldap_api.AdminLdapApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_ldap_status(self):
        """Test case for get_ldap_status

        Attempts to connect to all the configured LDAP servers and returns information on whenever they're available or not.  # noqa: E501
        """
        pass

    def test_get_ldap_user(self):
        """Test case for get_ldap_user

        Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.  # noqa: E501
        """
        pass

    def test_reload_ldap(self):
        """Test case for reload_ldap

        Reloads the LDAP configuration.  # noqa: E501
        """
        pass

    def test_sync_ldap_user(self):
        """Test case for sync_ldap_user

        Enables a single Grafana user to be synchronized against LDAP.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
